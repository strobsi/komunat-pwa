{"version":3,"sources":["webpack:///./node_modules/@angular/animations/@angular/animations.es5.js","webpack:///./node_modules/@angular/common/fesm5/http.js","webpack:///./src/app/matches/matches.module.ts","webpack:///./src/app/matches/matches.page.html","webpack:///./src/app/matches/matches.page.scss","webpack:///./src/app/matches/matches.page.ts","webpack:///./src/app/utils/pstate.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA,gEAAgE,mBAAmB,MAAM;AACzF,yBAAyB;AACzB;AACA;AACA,2EAA2E;AAC3E,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,mBAAmB,MAAM;AACjG,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA;AACA;AACA,sBAAsB,sCAAsC,GAAG,mBAAmB,MAAM;AACxF,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,mBAAmB,KAAK;AAC7F,uBAAuB;AACvB;AACA,IAAI,sEAAsE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA,YAAY,qBAAqB;AACjC,YAAY,oBAAoB;AAChC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,4BAA4B,eAAe;AAC3C,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,qDAAqD,yBAAyB,OAAO;AACrF,cAAc;AACd;AACA;AACA;AACA;AACA,8FAA8F;AAC9F,eAAe,KAAK,uBAAuB;AAC3C,mDAAmD,2BAA2B,OAAO;AACrF,8CAA8C;AAC9C;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA,wDAAwD,mBAAmB,OAAO;AAClF,cAAc;AACd;AACA;AACA;AACA,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA,IAAI,mBAAmB,KAAK,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,oBAAoB,aAAa;AACjC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA;AACA,IAAI,8BAA8B,aAAa,mCAAmC;AAClF,aAAa,uBAAuB,MAAM,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mCAAmC;AAC7C;AACA;AACA,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB,wBAAwB,cAAc;AACtC;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,6BAA6B;AACzF,mFAAmF;AACnF,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,0BAA0B,YAAY;AACtC,iCAAiC,cAAc;AAC/C;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,uCAAuC;AACnD,YAAY,yCAAyC;AACrD,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,0BAA0B;AACtC,YAAY,4BAA4B;AACxC,YAAY,2BAA2B;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+EAA+E;AAC/E,kEAAkE;AAClE;AACA;AACA,8BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iCAAiC;AAChF,wEAAwE;AACxE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,yBAAyB,aAAa;AACtC;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sDAAsD;AACtD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uDAAuD;AACvD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD;AACnD;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD;AACnD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,yDAAyD;AACzD;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B,gDAAgD,EAAE;AAC5E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,gDAAgD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,aAAa,EAAE;AAClE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2DAA2D,2BAA2B;AACtF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0DAA0D,0BAA0B;AACpF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6DAA6D,6BAA6B;AAC1F;AACA,gBAAgB;AAChB;AACA,4DAA4D,sBAAsB;AAClF;AACA,gBAAgB;AAChB;AACA,sDAAsD;AACtD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gDAAgD,aAAa,EAAE;AAC/D;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uDAAuD;AACvD;AACA,gBAAgB;AAChB;AACA,yDAAyD;AACzD;AACA,gBAAgB;AAChB;AACA,wDAAwD,kBAAkB;AAC1E;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa,EAAE;AACrE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uDAAuD;AACvD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,8DAA8D;AAC9D;AACA,gBAAgB;AAChB;AACA,6DAA6D,UAAU;AACvE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,aAAa,EAAE;AAClE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uDAAuD,0CAA0C,sBAAsB,EAAE,EAAE;AAC3H;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4DAA4D,2BAA2B;AACvF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2DAA2D,0BAA0B;AACrF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,8DAA8D,6BAA6B;AAC3F;AACA,gBAAgB;AAChB;AACA,6DAA6D,sBAAsB;AACnF;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,aAAa,EAAE;AACnE;AACA;AACA;AACA,iDAAiD,sBAAsB,EAAE;AACzE;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,0CAA0C,uBAAuB,EAAE,EAAE;AAC7H;AACA,gBAAgB;AAChB;AACA,0DAA0D,0CAA0C,yBAAyB,EAAE,EAAE;AACjI;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iDAAiD,wBAAwB,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,qDAAqD,yBAAyB,EAAE;AAChF;AACA,sDAAsD,aAAa,EAAE;AACrE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B,sBAAsB,EAAE;AAClD;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmL;AACnL;;;;;;;;;;;;;ACl1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEqF;AACe;AAC9D;AACkB;AACM;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,yCAAyC,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mEAAmE,EAAE;AAC1G;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,8BAA8B;AAC7F,mEAAmE,gCAAgC;AACnG,+DAA+D,gCAAgC;AAC/F,mEAAmE,kCAAkC;AACrG;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,oBAAoB,sCAAsC,EAAE;AACvH;AACA;AACA;AACA,wDAAwD,oBAAoB,sCAAsC,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA,2DAA2D,oBAAoB,sCAAsC,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,sDAAsD,EAAE;AACpH;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,yDAAyD,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mDAAmD,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA,kDAAkD,mDAAmD,EAAE;AACvG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D,2CAA2C,0BAA0B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kBAAkB,eAAe,GAAG,GAAG,EAAE;AACzC,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAE,WAAW,gEAAS,iBAAiB,kCAAkC,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6DAAM,mBAAmB,sCAAsC,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAG,iBAAiB,iBAAiB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAU;AAChC,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,+CAA+C;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,qDAAO,IAAI,4DAAM,CAAC,wDAAQ;AAClC,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qDAAqD,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qEAAqE;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,wDAAU;AAC/B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAc;AACzC,2BAA2B,4DAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yEAAiB;AAC9C;AACA;AACA;AACA;AACA,8BAA8B,wDAAU;AACxC,QAAQ,gEAAU;AAClB,QAAQ,qDAAO,IAAI,4DAAM,CAAC,wDAAQ,IAAI,qDAAO,IAAI,4DAAM,CAAC,yDAAW;AACnE,QAAQ,qDAAO,IAAI,4DAAM;AACzB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;AACA;AACA;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,qDAAO,IAAI,4DAAM;AACzB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,sDAAsD,EAAE;AACxI;AACA;AACA;AACA,8BAA8B,wDAAU;AACxC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU,oCAAoC,sDAAQ;AAC9D;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,sCAAsC,0DAA0D;AAChG,sCAAsC,0DAA0D;AAChG;AACA;AACA;AACA;AACA,oDAAoD,wDAAU;AAC9D,QAAQ,8DAAQ;AAChB;AACA;AACA,iBAAiB,4EAA4E;AAC7F,iBAAiB,qEAAqE;AACtF,iBAAiB,oDAAoD;AACrE,iBAAiB,sDAAsD;AACvE;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA,iBAAiB,oDAAoD;AACrE;AACA,iBAAiB,+CAA+C;AAChE;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAU;AACtC,QAAQ,8DAAQ;AAChB;AACA;AACA,iBAAiB,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","file":"matches-matches-module.js","sourcesContent":["/**\n * @license Angular v4.0.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AUTO_STYLE = '*';\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n * transition transition} entries that will be evaluated when the expression bound to the trigger\n * changes.\n *\n * Triggers are registered within the component annotation data under the {\\@link\n * Component#animations-anchor animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and {\\@link\n * transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * tools/gulp-tasks/validate-commit-message.js ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger(name, definitions) {\n    return { name: name, definitions: definitions };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different statrting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction group(steps) {\n    return { type: 3 /* Group */, steps: steps };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction sequence(steps) {\n    return { type: 2 /* Sequence */, steps: steps };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state(name, styles) {\n    return { type: 0 /* State */, name: name, styles: styles };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes(steps) {\n    return { type: 5 /* KeyframeSequence */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition(stateChangeExpr, steps) {\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cb\n * @return {?}\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationPlayer = (function () {\n    function AnimationPlayer() {\n    }\n    /**\n     * @abstract\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationPlayer.prototype.onDone = function (fn) { };\n    /**\n     * @abstract\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationPlayer.prototype.onStart = function (fn) { };\n    /**\n     * @abstract\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationPlayer.prototype.onDestroy = function (fn) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.init = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.hasStarted = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.play = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.pause = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.restart = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.finish = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.reset = function () { };\n    /**\n     * @abstract\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationPlayer.prototype.setPosition = function (p) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    AnimationPlayer.prototype.getPosition = function () { };\n    Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n        /**\n         * @param {?} player\n         * @return {?}\n         */\n        set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n        enumerable: true,\n        configurable: true\n    });\n    return AnimationPlayer;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationPlayer = (function () {\n    function NoopAnimationPlayer() {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this.parentPlayer = null;\n    }\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.init = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.play = function () {\n        var _this = this;\n        if (!this.hasStarted()) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n            this._onStart();\n        }\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onStart = function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.pause = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.restart = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.reset = function () { };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.setPosition = function (p) { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return NoopAnimationPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationGroupPlayer = (function () {\n    /**\n     * @param {?} _players\n     */\n    function AnimationGroupPlayer(_players) {\n        var _this = this;\n        this._players = _players;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        var count = 0;\n        var total = this._players.length;\n        if (total == 0) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        else {\n            this._players.forEach(function (player) {\n                player.parentPlayer = _this;\n                player.onDone(function () {\n                    if (++count >= total) {\n                        _this._onFinish();\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.play = function () {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this._players.forEach(function (player) { return player.play(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.finish = function () {\n        this._onFinish();\n        this._players.forEach(function (player) { return player.finish(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n            this._destroyed = true;\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.reset = function () {\n        this._players.forEach(function (player) { return player.reset(); });\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.setPosition = function (p) {\n        this._players.forEach(function (player) { player.setPosition(p); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.getPosition = function () {\n        var /** @type {?} */ min = 0;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ p = player.getPosition();\n            min = Math.min(p, min);\n        });\n        return min;\n    };\n    Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._players; },\n        enumerable: true,\n        configurable: true\n    });\n    return AnimationGroupPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AUTO_STYLE, animate, group, keyframes, sequence, state, style, transition, trigger, AnimationPlayer, NoopAnimationPlayer, AnimationGroupPlayer as ɵAnimationGroupPlayer };\n//# sourceMappingURL=animations.es5.js.map\n","/**\n * @license Angular v7.2.7\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __spread, __read, __extends, __decorate, __metadata, __param } from 'tslib';\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nvar HttpHandler = /** @class */ (function () {\n    function HttpHandler() {\n    }\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nvar HttpBackend = /** @class */ (function () {\n    function HttpBackend() {\n    }\n    return HttpBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHeaders` class represents the header configuration options for an HTTP request.\n * Instances should be assumed immutable with lazy parsing.\n *\n * @publicApi\n */\nvar HttpHeaders = /** @class */ (function () {\n    /**  Constructs a new HTTP header object with the given values.*/\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name_1 = line.slice(0, index);\n                        var key = name_1.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name_1, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a header by a given name.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns Whether the header exits.\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns the first header value that matches a given name.\n     *\n     * @param name The header name to retrieve.\n     *\n     * @returns A string if the header exists, null otherwise\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns a list of header values for a given header name.\n     *\n     * @param name The header name from which to retrieve the values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * Appends a new header value to the existing set of\n     * header values.\n     *\n     * @param name The header name for which to append the values.\n     *\n     * @returns A clone of the HTTP header object with the value appended.\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * Sets a header value for a given name. If the header name already exists,\n     * its value is replaced with the given value.\n     *\n     * @param name The header name.\n     * @param value Provides the value to set or overide for a given name.\n     *\n     * @returns A clone of the HTTP header object with the newly set header value.\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * Deletes all header values for a given name.\n     *\n     * @param name The header name.\n     * @param value The header values to delete for a given name.\n     *\n     * @returns A clone of the HTTP header object.\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, other.headers.get(key));\n            _this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    };\n    HttpHeaders.prototype.clone = function (update) {\n        var clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, __spread(value));\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var toDelete_1 = update.value;\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * @internal\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(_this.normalizedNames.get(key), _this.headers.get(key)); });\n    };\n    return HttpHeaders;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * @publicApi\n */\nvar HttpUrlEncodingCodec = /** @class */ (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    HttpUrlEncodingCodec.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    HttpUrlEncodingCodec.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    HttpUrlEncodingCodec.prototype.decodeKey = function (key) { return decodeURIComponent(key); };\n    HttpUrlEncodingCodec.prototype.decodeValue = function (value) { return decodeURIComponent(value); };\n    return HttpUrlEncodingCodec;\n}());\nfunction paramParser(rawParams, codec) {\n    var map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], 2), key = _a[0], val = _a[1];\n            var list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n * @publicApi\n */\nvar HttpParams = /** @class */ (function () {\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(\"Cannot specify both fromString and fromObject.\");\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(function (key) {\n                var value = options.fromObject[key];\n                _this.map.set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return this.map.has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var res = this.map.get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return this.map.get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(this.map.keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var eKey = _this.encoder.encodeKey(key);\n            return _this.map.get(key).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    HttpParams.prototype.clone = function (update) {\n        var clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return _this.map.set(key, _this.cloneFrom.map.get(key)); });\n            this.updates.forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var base = (update.op === 'a' ? _this.map.get(update.param) : undefined) || [];\n                        base.push(update.value);\n                        _this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var base_1 = _this.map.get(update.param) || [];\n                            var idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                _this.map.set(update.param, base_1);\n                            }\n                            else {\n                                _this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            _this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nvar HttpRequest = /** @class */ (function () {\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var method = update.method || this.method;\n        var url = update.url || this.url;\n        var responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var headers = update.headers || this.headers;\n        var params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, update.setHeaders[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, update.setParams[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nvar HttpResponseBase = /** @class */ (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nvar HttpHeaderResponse = /** @class */ (function (_super) {\n    __extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nvar HttpResponse = /** @class */ (function (_super) {\n    __extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body !== undefined ? init.body : null;\n        return _this;\n    }\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nvar HttpErrorResponse = /** @class */ (function (_super) {\n    __extends(HttpErrorResponse, _super);\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n *\n * @see [HTTP Guide](guide/http)\n *\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n* ```\n *\n * @publicApi\n */\nvar HttpClient = /** @class */ (function () {\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            var headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            var params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers: headers,\n                params: params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var events$ = of(req).pipe(concatMap(function (req) { return _this.handler.handle(req); }));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var res$ = events$.pipe(filter(function (event) { return event instanceof HttpResponse; }));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map(function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map(function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map(function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map(function (res) { return res.body; }));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, options);\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, options);\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, options);\n    };\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, options);\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    HttpClient = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [HttpHandler])\n    ], HttpClient);\n    return HttpClient;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nvar HttpInterceptorHandler = /** @class */ (function () {\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * @publicApi\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = /** @class */ (function () {\n    function NoopInterceptor() {\n    }\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    NoopInterceptor = __decorate([\n        Injectable()\n    ], NoopInterceptor);\n    return NoopInterceptor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nvar JsonpCallbackContext = /** @class */ (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * @publicApi\n */\nvar JsonpClientBackend = /** @class */ (function () {\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var callback = _this.nextCallback();\n            var url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var body = null;\n            // Whether the response callback has been called.\n            var finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    JsonpClientBackend = __decorate([\n        Injectable(),\n        __param(1, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [JsonpCallbackContext, Object])\n    ], JsonpClientBackend);\n    return JsonpClientBackend;\n}());\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @publicApi\n */\nvar JsonpInterceptor = /** @class */ (function () {\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    JsonpInterceptor = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [JsonpClientBackend])\n    ], JsonpInterceptor);\n    return JsonpInterceptor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nvar XhrFactory = /** @class */ (function () {\n    function XhrFactory() {\n    }\n    return XhrFactory;\n}());\n/**\n * A factory for @{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n *\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * @publicApi\n */\nvar HttpXhrBackend = /** @class */ (function () {\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var status = xhr.status === 1223 ? 204 : xhr.status;\n                var statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    var originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error: error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var onError = function (error) {\n                var url = partialFromXhr().url;\n                var res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    HttpXhrBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [XhrFactory])\n    ], HttpXhrBackend);\n    return HttpXhrBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nvar HttpXsrfTokenExtractor = /** @class */ (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = /** @class */ (function () {\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    HttpXsrfCookieExtractor = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)), __param(1, Inject(PLATFORM_ID)),\n        __param(2, Inject(XSRF_COOKIE_NAME)),\n        __metadata(\"design:paramtypes\", [Object, String, String])\n    ], HttpXsrfCookieExtractor);\n    return HttpXsrfCookieExtractor;\n}());\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = /** @class */ (function () {\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    HttpXsrfInterceptor = __decorate([\n        Injectable(),\n        __param(1, Inject(XSRF_HEADER_NAME)),\n        __metadata(\"design:paramtypes\", [HttpXsrfTokenExtractor, String])\n    ], HttpXsrfInterceptor);\n    return HttpXsrfInterceptor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nvar HttpInterceptingHandler = /** @class */ (function () {\n    function HttpInterceptingHandler(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    HttpInterceptingHandler.prototype.handle = function (req) {\n        if (this.chain === null) {\n            var interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, this.backend);\n        }\n        return this.chain.handle(req);\n    };\n    HttpInterceptingHandler = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [HttpBackend, Injector])\n    ], HttpInterceptingHandler);\n    return HttpInterceptingHandler;\n}());\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nvar HttpClientXsrfModule = /** @class */ (function () {\n    function HttpClientXsrfModule() {\n    }\n    HttpClientXsrfModule_1 = HttpClientXsrfModule;\n    /**\n     * Disable the default XSRF protection.\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule_1,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule_1,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    var HttpClientXsrfModule_1;\n    HttpClientXsrfModule = HttpClientXsrfModule_1 = __decorate([\n        NgModule({\n            providers: [\n                HttpXsrfInterceptor,\n                { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n            ],\n        })\n    ], HttpClientXsrfModule);\n    return HttpClientXsrfModule;\n}());\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nvar HttpClientModule = /** @class */ (function () {\n    function HttpClientModule() {\n    }\n    HttpClientModule = __decorate([\n        NgModule({\n            /**\n             * Optional configuration for XSRF protection.\n             */\n            imports: [\n                HttpClientXsrfModule.withOptions({\n                    cookieName: 'XSRF-TOKEN',\n                    headerName: 'X-XSRF-TOKEN',\n                }),\n            ],\n            /**\n             * Configures the [dependency injector](guide/glossary#injector) where it is imported\n             * with supporting services for HTTP communications.\n             */\n            providers: [\n                HttpClient,\n                { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                HttpXhrBackend,\n                { provide: HttpBackend, useExisting: HttpXhrBackend },\n                BrowserXhr,\n                { provide: XhrFactory, useExisting: BrowserXhr },\n            ],\n        })\n    ], HttpClientModule);\n    return HttpClientModule;\n}());\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nvar HttpClientJsonpModule = /** @class */ (function () {\n    function HttpClientJsonpModule() {\n    }\n    HttpClientJsonpModule = __decorate([\n        NgModule({\n            providers: [\n                JsonpClientBackend,\n                { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n            ],\n        })\n    ], HttpClientJsonpModule);\n    return HttpClientJsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ɵHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { MatchesPage } from './matches.page';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    IonicModule,\n    IonicStorageModule.forRoot(),\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MatchesPage],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class MatchesPageModule {}\n","module.exports = \"<ion-content>\\n\\n<div class=\\\"container\\\">\\n  <ion-row class=\\\"titleBar\\\">\\n      <ion-col size=\\\"10\\\">\\n      <p class=\\\"mainLbl\\\">DEIN TEAM</p>\\n      <p hidden class=\\\"backBtn\\\" name=\\\"filing\\\" (click) = \\\"backClicked()\\\">< DEIN TEAM</p>\\n\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <p text-center class=\\\"black\\\">\\n        <ion-icon class=\\\"substitutesBtn\\\" name=\\\"filing\\\" (click) = \\\"showSubstitutes()\\\"></ion-icon>\\n      </p>\\n      </ion-col>\\n  </ion-row>\\n\\n  <div *ngIf=\\\"SHOW_STATE == 1\\\"  class=\\\"content\\\" id=\\\"teamList\\\">\\n  <div *ngFor=\\\"let match of matches; let i = index\\\" class=\\\"animated fadeInRight delay-{{ i }}s match_{{ i }}\\\">\\n    <ion-card *ngIf=\\\"i < 20\\\" class=\\\"candidateCard\\\">\\n      <ion-row class=\\\"iconRow\\\">\\n        <ion-col size=\\\"3\\\">\\n          <div class=\\\"cCardLeft\\\">\\n              <div class=\\\"percentage\\\">\\n                {{match.show_distance}}\\n              </div> \\n            </div>\\n        </ion-col>\\n\\n        <ion-col size=\\\"6\\\">\\n\\n        </ion-col>\\n        <ion-col size=\\\"1\\\">\\n            <div class=\\\"reject\\\" (click) =\\\"reject(i)\\\">\\n                <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n            </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"nameRow\\\">\\n          <p class=\\\"c_name\\\">{{match.name}}<span class=\\\"slim\\\">{{match.birthdate}}</span></p>\\n      </ion-row>\\n      <ion-row class=\\\"fullHeight\\\">\\n        <ion-col class=\\\"fullHeight\\\" size=\\\"3\\\">\\n          <div class=\\\"cCardLeft\\\">\\n              <ion-avatar>\\n                  <img src=\\\"https://komunat.de/uploads/{{match.uuid}}.png\\\"/>\\n                </ion-avatar>\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"1\\\">\\n\\n        </ion-col>\\n\\n        <ion-col size=\\\"7\\\">\\n\\n          <div class=\\\"cCardRight\\\">\\n            <div class=\\\"c_info\\\">\\n              <p class=\\\"slim c_info_text\\\">Liste: \\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 1\\\">CDU</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 2\\\">GRÜNE</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 3\\\">SPD</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 4\\\">Freie Wähler</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 5\\\">FDP</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 6\\\">SÖS</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 7\\\">AfD</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 8\\\">DIE LINKE</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 9\\\">PIRATEN</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 10\\\">Stadtisten</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 11\\\">Junge Liste Stuttgart</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 12\\\">ÖDP</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 13\\\">DiB</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 14\\\">Tierschutzpartei</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 15\\\">Die PARTEI</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 16\\\">BIG</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 17\\\">SchUB</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 18\\\">BZS23</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 19\\\">Kein Fahrverbot in Stuttgart</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.list == 20\\\">FeLi</span>\\n              </p>\\n              <p class=\\\"slim c_info_text\\\">Listenplatz: \\n                <span class=\\\"bold\\\">{{match.list_number}}</span>\\n              \\n              </p>\\n              <p class=\\\"slim c_info_text\\\">Stadtbezirk: \\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 1\\\">Mitte</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 2\\\">Nord</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 3\\\">Ost</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 4\\\">Süd</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 5\\\">West</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 6\\\">Bad Cannstatt</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 7\\\">Birkach</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 8\\\">Botnang</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 9\\\">Degerloch</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 10\\\">Feuerbach</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 11\\\">Hedelfingen</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 12\\\">Möhringen</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 13\\\">Mühlhausen</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 14\\\">Münster</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 15\\\">Obertürkheim</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 16\\\">Plieningen</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 17\\\">Sillenbuch</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 18\\\">Stammheim</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 19\\\">Untertürkheim</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 20\\\">Vaihingen</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 21\\\">Wangen</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 22\\\">Weilimdorf</span>\\n                <span class=\\\"bold\\\" *ngIf=\\\"match.district == 23\\\">Zuffenhausen</span>\\n\\n              </p>     \\n          </div>       \\n          </div>\\n          <div class=\\\"detailArrow\\\">\\n              <ion-icon name=\\\"arrow-dropright\\\"></ion-icon>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <div class=\\\"lefttopclickable\\\" (click) =\\\"showDetails(i)\\\">\\n        </div>\\n      <div class=\\\"clickable\\\" (click) =\\\"showDetails(i)\\\">\\n        </div>\\n    </ion-card>\\n  </div>\\n</div>\\n\\n<h4 *ngIf=\\\"SHOW_STATE == 1\\\" class=\\\"divider\\\">Die folgenden KandidatInnen sind nicht mehr in deinem Team:</h4>\\n\\n<div *ngIf=\\\"SHOW_STATE == 1\\\"  class=\\\"content\\\">\\n  <div *ngFor=\\\"let match of matches | slice:20; let i = index\\\" class=\\\"animated fadeInRight delay-{{ i }}s match_{{ i }}\\\">\\n    <ion-card class=\\\"candidateCard grayed\\\">\\n      <ion-row class=\\\"iconRow\\\">\\n        <ion-col size=\\\"3\\\">\\n          <div class=\\\"cCardLeft\\\">\\n              <div class=\\\"percentage\\\">\\n                {{match.show_distance}}\\n              </div> \\n            </div>\\n        </ion-col>\\n\\n        <ion-col size=\\\"6\\\">\\n\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"nameRow\\\">\\n          <p class=\\\"c_name\\\">{{match.name}}, <span class=\\\"slim\\\">{{match.birthdate}}</span></p>\\n      </ion-row>\\n      <ion-row class=\\\"fullHeight\\\">\\n        <ion-col class=\\\"fullHeight\\\" size=\\\"3\\\">\\n          <div class=\\\"cCardLeft\\\">\\n              <ion-avatar>\\n                  <img src=\\\"https://komunat.de/uploads/{{match.uuid}}.png\\\"/>\\n                </ion-avatar>\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"1\\\">\\n\\n        </ion-col>\\n\\n        <ion-col size=\\\"7\\\">\\n\\n          <div class=\\\"cCardRight\\\">\\n            <div class=\\\"c_info\\\">\\n                <p class=\\\"slim c_info_text\\\">Liste: \\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 1\\\">CDU</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 2\\\">GRÜNE</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 3\\\">SPD</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 4\\\">Freie Wähler</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 5\\\">FDP</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 6\\\">SÖS</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 7\\\">AfD</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 8\\\">DIE LINKE</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 9\\\">PIRATEN</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 10\\\">Stadtisten</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 11\\\">Junge Liste Stuttgart</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 12\\\">ÖDP</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 13\\\">DiB</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 14\\\">Tierschutzpartei</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 15\\\">Die PARTEI</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 16\\\">BIG</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 17\\\">SchUB</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 18\\\">BZS23</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 19\\\">Kein Fahrverbot in Stuttgart</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.list == 20\\\">FeLi</span>\\n                  </p>\\n                  <p class=\\\"slim c_info_text\\\">Listenplatz: \\n                    <span class=\\\"bold\\\">{{match.list_number}}</span>\\n                  \\n                  </p>\\n                  <p class=\\\"slim c_info_text\\\">Stadtbezirk: \\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 1\\\">Mitte</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 2\\\">Nord</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 3\\\">Ost</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 4\\\">Süd</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 5\\\">West</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 6\\\">Bad Cannstatt</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 7\\\">Birkach</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 8\\\">Botnang</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 9\\\">Degerloch</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 10\\\">Feuerbach</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 11\\\">Hedelfingen</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 12\\\">Möhringen</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 13\\\">Mühlhausen</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 14\\\">Münster</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 15\\\">Obertürkheim</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 16\\\">Plieningen</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 17\\\">Sillenbuch</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 18\\\">Stammheim</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 19\\\">Untertürkheim</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 20\\\">Vaihingen</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 21\\\">Wangen</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 22\\\">Weilimdorf</span>\\n                    <span class=\\\"bold\\\" *ngIf=\\\"match.district == 23\\\">Zuffenhausen</span>\\n    \\n                  </p> \\n          </div>       \\n          </div>\\n          <div class=\\\"detailArrow\\\">\\n              <ion-icon name=\\\"arrow-dropright\\\"></ion-icon>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <div class=\\\"lefttopclickable\\\" (click) =\\\"showDetails(i+20)\\\">\\n        </div>\\n      <div class=\\\"clickable\\\" (click) =\\\"showDetails(i+20)\\\">\\n        </div>\\n    </ion-card>\\n  </div>\\n  <br>\\n  <ion-card *ngIf=\\\"LAST == false\\\" class=\\\"loadBtn\\\">\\n      <ion-button (click)=\\\"loadMore()\\\" expand=\\\"block\\\">Mehr laden...</ion-button>\\n    </ion-card>\\n    <br>\\n</div>\\n\\n<!--START SUBSTITUTE-->\\n\\n<div *ngIf=\\\"SHOW_STATE == 2\\\"  class=\\\"content\\\">\\n    <div *ngFor=\\\"let s of substitutes; let i = index\\\" class=\\\"animated fadeInRight delay-{{ i }}s match_{{ i }}\\\">\\n      \\n        <ion-card class=\\\"candidateCard\\\">\\n            <ion-row class=\\\"iconRow\\\">\\n              <ion-col size=\\\"3\\\">\\n                <div class=\\\"cCardLeft\\\">\\n                    <div class=\\\"percentage\\\">\\n                        {{s.show_distance}}\\n                    </div> \\n                  </div>\\n              </ion-col>\\n      \\n              <ion-col size=\\\"6\\\">\\n              </ion-col>\\n              <ion-col size=\\\"1\\\">\\n                  <div class=\\\"readd\\\" (click)=\\\"backToMatches(0,i)\\\">\\n                      <ion-icon name=\\\"git-compare\\\"></ion-icon>\\n                  </div>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"nameRow\\\">\\n                <p class=\\\"c_name\\\">{{s.name}}, <span class=\\\"slim\\\">30</span></p>\\n            </ion-row>\\n            <ion-row class=\\\"fullHeight\\\">\\n              <ion-col class=\\\"fullHeight\\\" size=\\\"3\\\">\\n                <div class=\\\"cCardLeft\\\">\\n                    <ion-avatar>\\n                        <img src=\\\"https://komunat.de/uploads/{{s.uuid}}.png\\\"/>\\n                      </ion-avatar>\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"1\\\">\\n      \\n              </ion-col>\\n      \\n              <ion-col size=\\\"7\\\">\\n      \\n                <div class=\\\"cCardRight\\\">\\n                  <div class=\\\"c_info\\\">\\n                      <p class=\\\"slim c_info_text\\\">Liste: \\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 1\\\">CDU</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 2\\\">GRÜNE</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 3\\\">SPD</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 4\\\">Freie Wähler</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 5\\\">FDP</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 6\\\">SÖS</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 7\\\">AfD</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 8\\\">DIE LINKE</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 9\\\">PIRATEN</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 10\\\">Stadtisten</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 11\\\">Junge Liste Stuttgart</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 12\\\">ÖDP</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 13\\\">DiB</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 14\\\">Tierschutzpartei</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 15\\\">Die PARTEI</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 16\\\">BIG</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 17\\\">SchUB</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 18\\\">BZS23</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 19\\\">Kein Fahrverbot in Stuttgart</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.list == 20\\\">FeLi</span>\\n                        </p>\\n                        <p class=\\\"slim c_info_text\\\">Listenplatz: \\n                          <span class=\\\"bold\\\">{{s.list_number}}</span>\\n                        \\n                        </p>\\n                        <p class=\\\"slim c_info_text\\\">Stadtbezirk: \\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 1\\\">Mitte</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 2\\\">Nord</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 3\\\">Ost</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 4\\\">Süd</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 5\\\">West</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 6\\\">Bad Cannstatt</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 7\\\">Birkach</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 8\\\">Botnang</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 9\\\">Degerloch</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 10\\\">Feuerbach</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 11\\\">Hedelfingen</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 12\\\">Möhringen</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 13\\\">Mühlhausen</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 14\\\">Münster</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 15\\\">Obertürkheim</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 16\\\">Plieningen</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 17\\\">Sillenbuch</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 18\\\">Stammheim</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 19\\\">Untertürkheim</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 20\\\">Vaihingen</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 21\\\">Wangen</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 22\\\">Weilimdorf</span>\\n                          <span class=\\\"bold\\\" *ngIf=\\\"s.district == 23\\\">Zuffenhausen</span>\\n          \\n                        </p> \\n                </div>       \\n                </div>\\n                <div class=\\\"detailArrow\\\">\\n                    <ion-icon name=\\\"arrow-dropright\\\"></ion-icon>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n            <div class=\\\"lefttopclickable\\\" (click) =\\\"showDetails(i)\\\">\\n              </div>\\n            <div class=\\\"clickable\\\" (click) =\\\"showDetails(i)\\\">\\n              </div>\\n          </ion-card>\\n\\n\\n    </div>\\n  </div>\\n  <div class=\\\"tutorial\\\" *ngIf=\\\"NO_TUTORIAL==false\\\">\\n    <ion-slides zoom=\\\"false\\\" pager=\\\"true\\\">\\n        <ion-slide>\\n          <div class=\\\"tutorialContent\\\">\\n            <h5 class=\\\"left blue bold\\\">Nur noch kurz</h5>\\n            <div class=\\\"tutorialText\\\">\\n                <h5 class=\\\"white\\\">\\n                    Klicke auf <ion-icon class=\\\"red rejectIcon\\\" name=\\\"close-circle\\\"></ion-icon> \\n                    <br>\\n                    <br>\\n                    um KandidatInnen aus deinem Team zu entfernen\\n                    <br>\\n                    <br>\\n                    Es rutschen dann automatisch KandidatInnen von unten nach.\\n                    <br>\\n                    <br>\\n                </h5>\\n              </div>\\n              <ion-row class=\\\"tutBtn\\\">\\n                  <ion-col size=12>\\n                   <ion-button (click) =\\\"tutorialBtnClicked(0)\\\" color=\\\"light\\\" fill=\\\"outline\\\" expand=\\\"block\\\">Weiter</ion-button>\\n                  </ion-col>\\n              </ion-row>\\n          </div>\\n      </ion-slide>\\n\\n\\n      <ion-slide>\\n          <div class=\\\"tutorialContent\\\">\\n              <h5 class=\\\"left blue bold\\\">Nur noch kurz</h5>\\n              <br>\\n                  <h5 class=\\\"white\\\">\\n                    Die entfernten KandidatInnen findest du nach dem Aussortieren auf der Ersatzbank wieder.<br>\\n                    Du kannst sie jederzeit mit <ion-icon class=\\\"blue rejectIcon\\\" name=\\\"git-compare\\\"></ion-icon>  \\n                    <br><br>\\n                    wieder hinzufügen. Dabei rutschen die unteren KandidatInnen wieder aus deiner Liste.\\n                  </h5>\\n                <ion-row class=\\\"tutBtn\\\">\\n                    <ion-col size=12>\\n                     <ion-button (click) =\\\"tutorialBtnClicked(1)\\\" color=\\\"light\\\" fill=\\\"outline\\\" expand=\\\"block\\\">Alles klar!</ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n      </ion-slide>\\n    </ion-slides>\\n  </div>\\n</div>\\n\\n<ion-footer padding *ngIf=\\\"NO_TUTORIAL==true\\\">\\n    <h1 (click)=\\\"showEmailSend()\\\" class=\\\"footer\\\">Ergebnis herunterladen</h1>\\n</ion-footer>\\n\\n</ion-content>\\n\\n\\n\"","module.exports = \".container {\\n  height: 100vh;\\n  /* Fallback for browsers that do not support Custom Properties */\\n  height: calc(var(--vh, 1vh) * 100);\\n  margin-top: 5vh; }\\n\\n.titleBar {\\n  margin-left: 10px;\\n  font-size: 7vw; }\\n\\n.subsIcon {\\n  margin: 0px;\\n  padding: 0px;\\n  font-size: 12px; }\\n\\n.candidateCard {\\n  height: 180px; }\\n\\n.grayed {\\n  background-color: var(--komunat-gray-light); }\\n\\n.clickable {\\n  position: absolute;\\n  top: 25%;\\n  left: 0px;\\n  width: 100%;\\n  height: 80%; }\\n\\n.lefttopclickable {\\n  position: absolute;\\n  top: 0%;\\n  left: 0px;\\n  width: 80%;\\n  height: 25%; }\\n\\n.fullHeight {\\n  height: 100%; }\\n\\n.black {\\n  color: var(--komunat-gray-dark); }\\n\\n.nameRow {\\n  margin-top: 5px;\\n  margin-left: 10px;\\n  margin-bottom: 5px; }\\n\\n.iconRow {\\n  margin-left: -10px;\\n  margin-top: 0px; }\\n\\n.cCardLeft {\\n  width: 100%;\\n  height: 100%;\\n  vertical-align: middle;\\n  text-align: center; }\\n\\n.cCardLeft ion-avatar {\\n  width: 25vw;\\n  height: 25vw;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  display: block;\\n  margin-left: 10px;\\n  position: absolute;\\n  top: 30%;\\n  left: 55%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border-radius: 50%; }\\n\\n.percentage {\\n  background-color: #59BCED;\\n  border-radius: 0px 10px 10px 0px;\\n  height: 5vw;\\n  line-height: 5vw;\\n  vertical-align: middle;\\n  width: 15vw;\\n  position: absolute;\\n  color: white;\\n  font-weight: bold;\\n  padding: 2px; }\\n\\n/* iPhone 5 \\nYou can also target devices with aspect ratio. */\\n\\n@media screen and (device-aspect-ratio: 40 / 71) {\\n  .percentage {\\n    background-color: #59BCED;\\n    border-radius: 0px 10px 10px 0px;\\n    height: 5vw;\\n    line-height: 5vw;\\n    vertical-align: middle;\\n    width: 15vw;\\n    position: absolute;\\n    color: white;\\n    font-weight: bold;\\n    font-size: 10px;\\n    padding: 2px; } }\\n\\n.cCardRight {\\n  width: 100%;\\n  height: 100%;\\n  padding-left: 10px; }\\n\\nh2 {\\n  color: #4C4D4F;\\n  font-size: 8vw;\\n  text-align: center;\\n  font-family: 'Source Sans Pro', sans-serif;\\n  font-weight: bold; }\\n\\nh4 {\\n  height: 5vh;\\n  font-size: 6vw;\\n  margin: 1em;\\n  color: #4C4D4F;\\n  text-align: center;\\n  font-family: 'Source Sans Pro', sans-serif;\\n  font-weight: bold; }\\n\\nh5 {\\n  margin-top: 20px;\\n  font-size: 5vw;\\n  font-family: 'Source Sans Pro', sans-serif;\\n  font-weight: bold; }\\n\\np {\\n  font-family: 'Source Sans Pro', sans-serif;\\n  color: var(--komunat-blue);\\n  margin-bottom: 0px; }\\n\\n.c_name {\\n  color: var(--komunat-gray-dark);\\n  font-weight: bold;\\n  font-size: 5vw; }\\n\\n.c_info {\\n  margin-top: 10px; }\\n\\n.bold {\\n  font-weight: bold; }\\n\\n.c_info_text {\\n  margin-bottom: 4px;\\n  margin-top: 4px;\\n  color: var(--komunat-gray-dark); }\\n\\n.slim {\\n  font-weight: lighter; }\\n\\n.blue {\\n  color: var(--komunat-blue); }\\n\\n.white {\\n  color: white; }\\n\\n.red {\\n  color: var(--komunat-red); }\\n\\n.left {\\n  text-align: left; }\\n\\n.reject {\\n  position: absolute;\\n  top: 0px;\\n  right: -35px;\\n  width: 8vw;\\n  border-radius: 50%;\\n  text-align: center;\\n  font-size: 12vw;\\n  color: var(--komunat-red); }\\n\\n.rejectIcon {\\n  -webkit-transform: translate(0%, 35%);\\n          transform: translate(0%, 35%);\\n  font-size: 12vw; }\\n\\n.readd {\\n  position: absolute;\\n  top: 0px;\\n  right: -10px;\\n  width: 8vw;\\n  border-radius: 50%;\\n  text-align: center;\\n  font-size: 12vw;\\n  color: var(--ion-color-success); }\\n\\n.detailArrow {\\n  position: absolute;\\n  right: -10px;\\n  top: 20%;\\n  left: 100%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  font-size: 5vw; }\\n\\n.content {\\n  margin-bottom: 100px; }\\n\\n.loadBtn {\\n  margin-bottom: 100px; }\\n\\n.divider {\\n  border-color: var(--komunat-gray-dark);\\n  margin-top: -60px;\\n  margin-bottom: 80px; }\\n\\n.footer {\\n  background-color: var(--komunat-blue);\\n  margin: 0px;\\n  padding: 0px;\\n  height: 60px;\\n  line-height: 60px;\\n  color: white;\\n  font-weight: bold;\\n  font-size: 5vw;\\n  font-family: 'Source Sans Pro', sans-serif;\\n  text-align: center;\\n  position: fixed;\\n  bottom: 0px;\\n  left: 0px;\\n  right: 0px; }\\n\\n.tutorial {\\n  position: fixed;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.8); }\\n\\n.tutorialContent {\\n  width: 100vw;\\n  height: 93vh;\\n  margin-top: 8vh;\\n  margin-left: 20px;\\n  margin-right: 20px; }\\n\\n.exampleBox {\\n  position: absolute;\\n  height: 23vh;\\n  width: 90%;\\n  border-radius: 5px;\\n  border: 2px solid;\\n  border-color: white; }\\n\\n.tutorialText {\\n  margin-top: 5vh;\\n  text-align: left;\\n  width: 90%; }\\n\\n.platform-android .tutBtn {\\n  position: absolute;\\n  bottom: 20%;\\n  width: 90vw; }\\n\\n.platform-ios .tutBtn {\\n  position: absolute;\\n  bottom: 10%;\\n  width: 90vw; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { IonSlides } from '@ionic/angular';\nimport anime from 'animejs';\nimport 'hammerjs';\nimport {PSTATE} from '../utils/pstate';  \nimport { NavController } from \"@ionic/angular\";\nimport { NavigationExtras } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { GoogleAnalytics } from '@ionic-native/google-analytics/ngx';\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.page.html',\n  styleUrls: ['./matches.page.scss'],\n  animations: [\n    trigger('items', [\n      transition(':enter', [\n        style({ transform: 'scale(0.5)', opacity: 0 }),  // initial\n        animate('0.6s cubic-bezier(.4, -0.6, 0.2, 1.5)', \n          style({ transform: 'scale(1)', opacity: 1 }))  // final\n      ]),\n      transition(':leave', [\n        style({ transform: 'translateY(-10in)', opacity: 0, height: '*' }),\n        animate('0.4s cubic-bezier(.4, -0.6, 0.2, 0.6)', \n         style({ \n           transform: 'scale(0.5)', opacity: 0, \n           height: '0px', margin: '0px' \n         })) \n      ])\n    ])\n  ]\n})\n\nexport class MatchesPage implements OnInit {\n\n  SHOW_STATE;\n  NO_TUTORIAL;\n  @ViewChild(IonSlides) slides: IonSlides;\n\n\n  matches = [];\n  result = {values:[],contents:[]};\n  page = 1;\n  LAST = false;\n  pdfObj = null;\n  \n\n  substitutes = [];\n  present_title = \"DEIN ERGEBNIS\";\n  \n  constructor(public navCtrl: NavController, public storage: Storage, private ga: GoogleAnalytics) {\n    \n  }\n\n  swipedRight(e,i) {\n    this.accept(i);\n  } \n\n  swipedLeft(e,i) {\n    this.reject(i);\n  } \n\n  backToMatches(t,i) {\n    if (t == 0) {\n      // Coming from subs\n      const element =  document.querySelector('.match_'+i);\n      this.matches.push(this.substitutes[i])\n      this.substitutes.splice(i,1)\n      this.pulseTeam();\n      anime({\n        targets: element,\n        translateX: \"150vw\",\n        rotate: 40,\n        easing: 'easeInOutQuad',\n        duration: 400\n      });\n    }\n  }\n\n  private loadResults(a) {  \n     var xhr = new XMLHttpRequest();\n     var url = \"https://komunat.de/result\";\n     a.page = this.page;\n     var data = JSON.stringify(a);\n     xhr.open(\"POST\", url, true);\n     xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n     xhr.onreadystatechange = () => {\n         if (xhr.readyState === 4) {\n           var data = JSON.parse(xhr.responseText);\n            if (this.page == 1) {\n              this.matches = data\n            }\n            else {\n              if(data.length < 30) {\n                this.LAST = true;\n              }\n              for (var i = 0; i < data.length; i++) {\n                console.log(\"Appending to existing\")\n                this.matches.push(data[i]);\n              }\n            }\n            this.sortMatches();\n         } else if(xhr.readyState === 0) { \n            xhr.send(data);\n         }\n     };\n     xhr.send(data);\n  }\n\n  ngOnInit(): void {\n    this.ga.trackEvent('userflow', 'Reached Matches')\n    .then(() => {\n    })\n    this.setState(PSTATE.MATCHES);\n    this.storage.get(\"matches\").then( result => {\n      if (!result) {\n      } else {\n        var a = JSON.parse(result);\n       this.NO_TUTORIAL = false;\n       this.result = a;\n       this.page = 1;\n       this.loadResults(a);\n      }\n  })\n  }\n\n  public reject(i) {\n    const element =  document.querySelector('.match_'+i);\n    this.swipeOutLeft(element,i)\n  }\n\n  public accept(i) {\n    const element =  document.querySelector('.match_'+i);\n    this.swipeOutRight(element,i)\n  }\n\n  private swipeOutLeft(elem,i) {\n    this.pulseSubstitute();\n    anime({\n      targets: elem,\n      translateX: \"-150vw\",\n      rotate: -40,\n      easing: 'easeInOutQuad',\n      duration: 400\n    });\n    var m = this.matches;\n    var s = this.substitutes;\n    setTimeout((function() {\n      s.push(m[i])\n      m.splice(i,1)\n    }),220);\n}\n\n  private swipeOutRight(elem,i) {\n      this.pulseTeam();\n      anime({\n        targets: elem,\n        translateX: \"150vw\",\n        rotate: 40,\n        easing: 'easeInOutQuad',\n        duration: 400\n      });\n      var m = this.matches;\n      setTimeout((function() {\n        m.splice(i,1)\n      }),220);\n  }\n\n  backClicked() {\n    this.setState(PSTATE.MATCHES)\n    var subs = document.querySelector(\".substitutesBtn\");\n    var lbl = document.querySelector(\".mainLbl\");\n    anime({\n      targets: [subs],\n      opacity: 1,\n      easing: 'easeInOutQuad',\n      duration: 200,\n      complete: function(){\n        var back = document.querySelector(\".backBtn\");\n        var subs = document.querySelector(\".substitutesBtn\");\n        lbl.removeAttribute(\"hidden\");\n        subs.removeAttribute(\"hidden\");\n        back.setAttribute(\"hidden\",\"false\");\n      }\n    });\n    // TODO hide subs and show matches\n  }\n\n  showSubstitutes() {\n    this.setState(PSTATE.SUBS)\n    var subs = document.querySelector(\".substitutesBtn\");\n    var lbl = document.querySelector(\".mainLbl\");\n    anime({\n      targets: [subs],\n      opacity: 0,\n      easing: 'easeInOutQuad',\n      duration: 200,\n      complete: function(){\n        var back = document.querySelector(\".backBtn\");\n        var subs = document.querySelector(\".substitutesBtn\");\n        subs.setAttribute(\"hidden\",\"true\");\n        lbl.setAttribute(\"hidden\",\"true\");\n        back.removeAttribute(\"hidden\");\n      }\n    });\n    // TODO: show subs and hide matches\n  }\n\n  showTeam() {\n    this.setState(PSTATE.TEAM)\n    var subs = document.querySelector(\".substitutesBtn\");\n    var team = document.querySelector(\".teamBtn\");\n    anime({\n      targets: [subs,team],\n      opacity: 0,\n      easing: 'easeInOutQuad',\n      duration: 200,\n      complete: function(){\n        var back = document.querySelector(\".backBtn\");\n        var subs = document.querySelector(\".substitutesBtn\");\n        subs.setAttribute(\"hidden\",\"true\");\n        back.removeAttribute(\"hidden\");\n      }\n    });\n    // TODO: show subs and hide matches\n  }\n\n  public showDetails(i) {\n    // Show details of selected candidate\n    var c;\n    if (this.SHOW_STATE == 1) {\n      c = this.matches[i];      \n    } else if (this.SHOW_STATE == 2) {\n      c = this.substitutes[i];\n    }\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n          candidate: JSON.stringify(c)\n      }\n    };\n    this.navCtrl.navigateForward(['cdetail'], navigationExtras);\n  }\n\n  public pulseTeam() {\n    var elem = document.querySelector(\".teamBtn\")\n    anime({\n      targets: elem,\n      scale: 1.1,\n      color: \"#59BCED\",\n      easing: 'easeInOutQuad',\n      translateY: \"-1vh\",\n      duration: 200,\n      direction: 'alternate',\n    });\n  }\n\n  public pulseSubstitute() {\n    var elem = document.querySelector(\".substitutesBtn\")\n    anime({\n      targets: elem,\n      scale: 1.1,\n      color: \"#59BCED\",\n      translateY: \"-1vh\",\n      easing: 'easeInOutQuad',\n      duration: 200,\n      direction: 'alternate',\n    });\n  }\n\n  private setState(s) {\n    this.SHOW_STATE = s;\n    if (s == PSTATE.MATCHES) {\n      this.present_title = \"DEIN ERGEBNIS\"\n      this.sortMatches();\n    }\n    else if (s == PSTATE.SUBS) {\n      this.present_title = \"DEINE ERSATZBANK\"\n    }\n    else {\n      this.present_title = \"DEIN TEAM\"\n    }\n  }\n\n  private sortMatches() {\n    this.matches.sort(function (a, b) {\n      a.distance = a.distance\n      b.distance = b.distance\n      if (a.distance > b.distance) {\n        return 1;\n      }\n      if (a.distance < b.distance) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  public tutorialBtnClicked(i) {\n    if (i == 0 ) {\n      this.slides.slideNext();\n    }\n    else {\n      this.NO_TUTORIAL = true;\n    }\n  }\n\n  public loadMore() {\n      this.page = this.page+1;\n      this.loadResults(this.result);\n  }\n\n  public showEmailSend() {\n    var team = this.matches.slice(0, 20);\n    console.log(team);\n\n    this.storage.ready().then(() => {\n        this.storage.set(\"team\", JSON.stringify(team));\n        this.storage.set(\"result\",JSON.stringify(this.result));\n        let navigationExtras: NavigationExtras = {\n          queryParams: {\n              //team: JSON.stringify(team)\n          }\n        };\n        this.navCtrl.navigateForward(['share'], navigationExtras);\n    });\n  }\n}","export enum PSTATE {\n    MATCHES = 1,\n    SUBS = 2,\n    TEAM = 3\n}  "],"sourceRoot":""}